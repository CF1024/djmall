<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <!-- 模型版本。maven2.0必须是这样写，现在是maven2唯一支持的版本 -->
    <modelVersion>4.0.0</modelVersion>
    <modules>
        <module>djmall_model</module>
        <module>djmall_api</module>
        <module>djmall_provider</module>
        <module>djmall_admin</module>
    </modules>
    <!-- 控制springboot版本 -->
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.3.0.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <!-- 项目组织的唯一标识符 ：对应JAVA的包的结构，是main目录里java的目录结构-->
    <groupId>com.dj.mall</groupId>
    <!-- 项目的唯一标志：项目名-->
    <artifactId>djmall</artifactId>
    <!-- 项目的版本号（简明）-->
    <version>1.0-SNAPSHOT</version>
    <name>djmall</name>
    <description>Demo project for Spring Boot</description>
    <!-- 打包的机制  默认为jar -->
    <packaging>pom</packaging>

    <!--版本控制-->
    <properties>
        <java.version>1.8</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <dubbo.version>2.6.4</dubbo.version>
        <dubbo-spring-boot.version>0.2.0</dubbo-spring-boot.version>
        <dubbo-spring-context-support.version>1.0.2</dubbo-spring-context-support.version>
        <netty-all.version>4.1.43.Final</netty-all.version>
    </properties>

    <!-- 项目的依赖信息 -->
    <dependencies>

        <!-- 阿里的fastJson -->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>1.2.68</version>
        </dependency>

        <!-- dubbo依赖 alibaba版 -->
        <dependency>
            <groupId>com.alibaba.boot</groupId>
            <artifactId>dubbo-spring-boot-starter</artifactId>
            <version>${dubbo-spring-boot.version}</version>
        </dependency>

        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>dubbo</artifactId>
            <version>${dubbo.version}</version>
        </dependency>

        <dependency>
            <groupId>com.alibaba.spring</groupId>
            <artifactId>spring-context-support</artifactId>
            <version>${dubbo-spring-context-support.version}</version>
        </dependency>

        <!--领域对象模型-->
        <dependency>
            <groupId>net.sf.dozer</groupId>
            <artifactId>dozer</artifactId>
            <version>5.5.1</version>
        </dependency>

        <dependency>
            <groupId>io.craftsman</groupId>
            <artifactId>dozer-jdk8-support</artifactId>
            <version>1.0.2</version>
        </dependency>

        <!--spring-boot-starter的作用是引入依赖的jar包 以及 自己的自定义配置的jar包-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>

        <!--lombok-->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>

        <!--scope的值：compile（编译范围）、provided（已提供范围）、 runtime（运行时范围）、test（测试范围）、system（系统范围）-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.junit.vintage</groupId>
                    <artifactId>junit-vintage-engine</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
    </dependencies>

    <!--构建设置，主要包含两个部分：plugins设置构建的插件和resources排除或者删除资源文件-->
    <build>
        <!--使用的插件列表  此处直接用父项目的plugins-->
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

</project>
